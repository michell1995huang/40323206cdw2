<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CDW2 網頁 (虎尾科大MDE)</title><link href="http://2015fallhw.github.io/cdw2/post/" rel="alternate"></link><link href="http://2015fallhw.github.io/cdw2/post/feeds/all.atom.xml" rel="self"></link><id>http://2015fallhw.github.io/cdw2/post/</id><updated>2016-04-29T21:38:14+08:00</updated><entry><title>40323206-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323206-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:38:14+08:00</updated><author><name>Wan Jing</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323206-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href="http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206"&gt;http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在班級倉儲cdw2的master建立.leo進行英文字母的繪製(會自動產生一個.py)，建立好後可以在cmd輸入python wsgi.py的指令，就可以在近端開啟http://localhost:5000/bg組別/scrum第幾組員_task學號，可以檢視程式碼畫出的英文字母。
&lt;br/&gt;
我是以圓點開始畫，在依照字母排列的位置進行位移。&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;&lt;span style="font-size: 16pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;字母繪製程式說明：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;定義座標軸線&lt;br/&gt;
cgo.drawAxes(0, 240, 0, 240)&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;軸線&amp;amp;數字顏色&lt;br/&gt;
 "strokeColor":"顏色代碼"&lt;br/&gt;
"fillColor": "顏色代碼"&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎可參閱色碼表
&lt;a href="https://www.toodoo.com/db/color.html"&gt;https://www.toodoo.com/db/color.html&lt;/a&gt;
&lt;br/&gt;
TickInterval為LabelInterval內再分割時間間距&lt;br/&gt;
LabelInterval為座標軸上每(多少)單位為一等分&lt;br/&gt;
"xTickInterval": 20&lt;br/&gt;
"xLabelInterval": 20&lt;br/&gt;
"yTickInterval": 20&lt;br/&gt;
"yLabelInterval": 20&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;旋轉必須要針對相對中心 rot not working yet&lt;br/&gt;
chamber = &lt;br/&gt;
"M -6.8397, -1.4894 \&lt;br/&gt;
A 7, 7, 0, 1, 0, 6.8397, -1.4894 \&lt;br/&gt;
A 40, 40, 0, 0, 1, 6.8397, -18.511 \&lt;br/&gt;
A 7, 7, 0, 1, 0, -6.8397, -18.511 \&lt;br/&gt;
A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"&lt;br/&gt;
A, (橢圓經中心X軸向長),  (橢圓經中心Y軸向長) , 0 , (大圓/小圓), (計算出的切點座標) , (計算出的切點座標)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎計算公式：&lt;br/&gt;
from sympy import&lt;br/&gt;
§center ot radius 40&lt;br/&gt;
x1 = Symbol('x1')&lt;br/&gt;
y1 = Symbol('y1')&lt;br/&gt;
§upper tangent point&lt;br/&gt;
x2 = Symbol('x2')&lt;br/&gt;
y2 = Symbol('y2')&lt;br/&gt;
§lower tangent point&lt;br/&gt;
x3 = Symbol('x3')&lt;br/&gt;
y3 = Symbol('y3')&lt;br/&gt;
answer = solve([(x2-0)&lt;strong&gt;2 + (y2-0)&lt;/strong&gt;2 - 7*7, (x1-x2)&lt;strong&gt;2+(y1-y2)&lt;/strong&gt;2 -40&lt;strong&gt;2, (x1-x3)&lt;/strong&gt;2+(y1-y3)&lt;strong&gt;2 -40&lt;/strong&gt;2, (x1)&lt;strong&gt;2+(y1)&lt;/strong&gt;2 -47&lt;strong&gt;2, \
       (x1)&lt;/strong&gt;2+(y1+20)&lt;strong&gt;2 -47&lt;/strong&gt;2, x2 -x3], [x1, y1, x2, y2, x3, y3])&lt;br/&gt;
group = 1&lt;br/&gt;
for i in answer:&lt;br/&gt;
    try:&lt;br/&gt;
        g.es("group", group, ":")&lt;br/&gt;
    except:&lt;br/&gt;
        print("group", group, ":")&lt;br/&gt;
    for j in i:&lt;br/&gt;
        try:&lt;br/&gt;
            g.es(j.evalf(5))&lt;br/&gt;
        except:&lt;br/&gt;
            print(j.evalf(5))&lt;br/&gt;
    group += 1&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;建立第一鍊條，會直接複製鍊條cmbr
    basic1 = cmbr.dup()
角度設定  &lt;br /&gt;
    basic1.rotate(90)   →逆時針90°
定位座標 &lt;br /&gt;
    basic1.translate(x, y)&lt;/p&gt;
&lt;p&gt;cmbr.appendPath(basic1)&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
◎如何位移
首先必須瞭解除了初始鍊條，其他鍊條都只是複製初始鍊條來的，所以所有鍊條一開始的設定都一樣。
如果旋轉指令rotate不為0，表示有旋轉，是以座標原點再進行旋轉！
換句話說，如果你的座標不是訂在原點，那轉動的位移會很大！
那先在圓心完成字母後要怎麼移動？
&lt;br/&gt;
1.如果我們要將字母X位移160，先將初始鍊條X位移160&lt;br/&gt;
  cmbr.translate(0, 0)→cmbr.translate(160, 0)
&lt;br/&gt;&lt;br /&gt;
2.這是第二鍊條原本的位置  &lt;br /&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) 
&lt;br/&gt;     &lt;br /&gt;
3.我們再定義完後先將鍊條移回原點再設定&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(-160, 0)&lt;/span&gt;&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg))&lt;br /&gt;
&lt;br/&gt;&lt;br /&gt;
4.最後再移到想要與初始鍊條對其的位置&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.translate(-160, 0)&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) &lt;br/&gt; 
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(160, 0)&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #660077;"&gt;以字母C作為範例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../files/bg5/C.JPG"&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;Openshift的對應建立&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
◎可參考課程網頁&lt;br /&gt;
 &lt;a href="http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html"&gt;http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html&lt;/a&gt;
&lt;br /&gt;
1.建立新的Application，並在Source Code輸入https://github.com/2015fallhw/cdw2.git &lt;br /&gt;
&lt;img src="./../files/bg5/連結.JPG"&gt;
&lt;br /&gt;
2.建立鑰匙&lt;br /&gt;
&lt;img src="./../files/bg5/KEY1.JPG"&gt;
&lt;br /&gt;
&lt;img src="./../files/bg5/KEY2.JPG"&gt;
&lt;br /&gt;
3.git clone 後修改除了.git以外的檔案&lt;br /&gt;
4.建議直接複製github的master，操作較簡易，但無用檔案較多&lt;br /&gt;
5.push完後點選openshift的連結(會出現猜數字)在網址後輸入你的畫布位置&amp;amp;名稱&lt;br /&gt;
EX: /bg5/scrum2_task40323206&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;期中心得&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
這次的任務做了半個學期，其實了解鍊條排列的程式後做起來就會很輕鬆很有成就感，但重點我認為並不是英文字母，而是班級同學之間的協同。&lt;br /&gt;
其實cmd裡面的指令不外乎就是：&lt;br /&gt;
1.git clone&lt;br /&gt;
2.git checkout master /gh-pages&lt;br /&gt;
3.git add -A&lt;br /&gt;
4.git commit -m ""&lt;br /&gt;
5.git push origin gh-pages&lt;br /&gt;
那還有甚麼困難？困難的地方就在第一步和最後一步，大家雖然是fork老師fork組長產生了cdw2的倉儲，表面上看起來好像是獨立的，可是並非如此！&lt;br /&gt;
因為大家不了解協同的意義和運作方式，所以協同者(組長)才會這麼累，所以班級倉儲才會故障！老實說我覺得除了那些有心去了解，和維護倉儲的同學，其他人根本不知道"協同"的意義在哪？&lt;br /&gt;
對他們而言，不過就是完成鍊條的英文字母罷了，所以我覺得這塊還有待加強，如果，你真的想知道這堂課的意義，你必須要：&lt;br /&gt;
1.在乎你的組員(不要只顧自己好，要分享)&lt;br /&gt;
2.了解你在組別裡的工作(大家要分工)&lt;br /&gt;
3.尊重其他組別(可以互相參考資訊，但不要"偷竊")&lt;br /&gt;
4.隨時注意整個環境的變動(記得改版更新)&lt;br /&gt;
5.在乎這個班級(不要忘了倉儲是"年級"共用的，但我就不先說隔壁班了...)&lt;br /&gt;&lt;/p&gt;</summary><category term="scrum2"></category><category term="task1"></category></entry><entry><title>40323206-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323206-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:38:14+08:00</updated><author><name>Wan Jing</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323206-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href="http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206"&gt;http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在班級倉儲cdw2的master建立.leo進行英文字母的繪製(會自動產生一個.py)，建立好後可以在cmd輸入python wsgi.py的指令，就可以在近端開啟http://localhost:5000/bg組別/scrum第幾組員_task學號，可以檢視程式碼畫出的英文字母。
&lt;br/&gt;
我是以圓點開始畫，在依照字母排列的位置進行位移。&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;&lt;span style="font-size: 16pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;字母繪製程式說明：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;定義座標軸線&lt;br/&gt;
cgo.drawAxes(0, 240, 0, 240)&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;軸線&amp;amp;數字顏色&lt;br/&gt;
 "strokeColor":"顏色代碼"&lt;br/&gt;
"fillColor": "顏色代碼"&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎可參閱色碼表
&lt;a href="https://www.toodoo.com/db/color.html"&gt;https://www.toodoo.com/db/color.html&lt;/a&gt;
&lt;br/&gt;
TickInterval為LabelInterval內再分割時間間距&lt;br/&gt;
LabelInterval為座標軸上每(多少)單位為一等分&lt;br/&gt;
"xTickInterval": 20&lt;br/&gt;
"xLabelInterval": 20&lt;br/&gt;
"yTickInterval": 20&lt;br/&gt;
"yLabelInterval": 20&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;旋轉必須要針對相對中心 rot not working yet&lt;br/&gt;
chamber = &lt;br/&gt;
"M -6.8397, -1.4894 \&lt;br/&gt;
A 7, 7, 0, 1, 0, 6.8397, -1.4894 \&lt;br/&gt;
A 40, 40, 0, 0, 1, 6.8397, -18.511 \&lt;br/&gt;
A 7, 7, 0, 1, 0, -6.8397, -18.511 \&lt;br/&gt;
A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"&lt;br/&gt;
A, (橢圓經中心X軸向長),  (橢圓經中心Y軸向長) , 0 , (大圓/小圓), (計算出的切點座標) , (計算出的切點座標)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎計算公式：&lt;br/&gt;
from sympy import&lt;br/&gt;
§center ot radius 40&lt;br/&gt;
x1 = Symbol('x1')&lt;br/&gt;
y1 = Symbol('y1')&lt;br/&gt;
§upper tangent point&lt;br/&gt;
x2 = Symbol('x2')&lt;br/&gt;
y2 = Symbol('y2')&lt;br/&gt;
§lower tangent point&lt;br/&gt;
x3 = Symbol('x3')&lt;br/&gt;
y3 = Symbol('y3')&lt;br/&gt;
answer = solve([(x2-0)&lt;strong&gt;2 + (y2-0)&lt;/strong&gt;2 - 7*7, (x1-x2)&lt;strong&gt;2+(y1-y2)&lt;/strong&gt;2 -40&lt;strong&gt;2, (x1-x3)&lt;/strong&gt;2+(y1-y3)&lt;strong&gt;2 -40&lt;/strong&gt;2, (x1)&lt;strong&gt;2+(y1)&lt;/strong&gt;2 -47&lt;strong&gt;2, \
       (x1)&lt;/strong&gt;2+(y1+20)&lt;strong&gt;2 -47&lt;/strong&gt;2, x2 -x3], [x1, y1, x2, y2, x3, y3])&lt;br/&gt;
group = 1&lt;br/&gt;
for i in answer:&lt;br/&gt;
    try:&lt;br/&gt;
        g.es("group", group, ":")&lt;br/&gt;
    except:&lt;br/&gt;
        print("group", group, ":")&lt;br/&gt;
    for j in i:&lt;br/&gt;
        try:&lt;br/&gt;
            g.es(j.evalf(5))&lt;br/&gt;
        except:&lt;br/&gt;
            print(j.evalf(5))&lt;br/&gt;
    group += 1&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;建立第一鍊條，會直接複製鍊條cmbr
    basic1 = cmbr.dup()
角度設定  &lt;br /&gt;
    basic1.rotate(90)   →逆時針90°
定位座標 &lt;br /&gt;
    basic1.translate(x, y)&lt;/p&gt;
&lt;p&gt;cmbr.appendPath(basic1)&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
◎如何位移
首先必須瞭解除了初始鍊條，其他鍊條都只是複製初始鍊條來的，所以所有鍊條一開始的設定都一樣。
如果旋轉指令rotate不為0，表示有旋轉，是以座標原點再進行旋轉！
換句話說，如果你的座標不是訂在原點，那轉動的位移會很大！
那先在圓心完成字母後要怎麼移動？
&lt;br/&gt;
1.如果我們要將字母X位移160，先將初始鍊條X位移160&lt;br/&gt;
  cmbr.translate(0, 0)→cmbr.translate(160, 0)
&lt;br/&gt;&lt;br /&gt;
2.這是第二鍊條原本的位置  &lt;br /&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) 
&lt;br/&gt;     &lt;br /&gt;
3.我們再定義完後先將鍊條移回原點再設定&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(-160, 0)&lt;/span&gt;&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg))&lt;br /&gt;
&lt;br/&gt;&lt;br /&gt;
4.最後再移到想要與初始鍊條對其的位置&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.translate(-160, 0)&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) &lt;br/&gt; 
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(160, 0)&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #660077;"&gt;以字母C作為範例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../files/bg5/C.JPG"&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;Openshift的對應建立&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
◎可參考課程網頁&lt;br /&gt;
 &lt;a href="http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html"&gt;http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html&lt;/a&gt;
&lt;br /&gt;
1.建立新的Application，並在Source Code輸入https://github.com/2015fallhw/cdw2.git &lt;br /&gt;
&lt;img src="./../files/bg5/連結.JPG"&gt;
&lt;br /&gt;
2.建立鑰匙&lt;br /&gt;
&lt;img src="./../files/bg5/KEY1.JPG"&gt;
&lt;br /&gt;
&lt;img src="./../files/bg5/KEY2.JPG"&gt;
&lt;br /&gt;
3.git clone 後修改除了.git以外的檔案&lt;br /&gt;
4.建議直接複製github的master，操作較簡易，但無用檔案較多&lt;br /&gt;
5.push完後點選openshift的連結(會出現猜數字)在網址後輸入你的畫布位置&amp;amp;名稱&lt;br /&gt;
EX: /bg5/scrum2_task40323206&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;期中心得&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
這次的任務做了半個學期，其實了解鍊條排列的程式後做起來就會很輕鬆很有成就感，但重點我認為並不是英文字母，而是班級同學之間的協同。&lt;br /&gt;
其實cmd裡面的指令不外乎就是：&lt;br /&gt;
1.git clone&lt;br /&gt;
2.git checkout master /gh-pages&lt;br /&gt;
3.git add -A&lt;br /&gt;
4.git commit -m ""&lt;br /&gt;
5.git push origin gh-pages&lt;br /&gt;
那還有甚麼困難？困難的地方就在第一步和最後一步，大家雖然是fork老師fork組長產生了cdw2的倉儲，表面上看起來好像是獨立的，可是並非如此！&lt;br /&gt;
因為大家不了解協同的意義和運作方式，所以協同者(組長)才會這麼累，所以班級倉儲才會故障！老實說我覺得除了那些有心去了解，和維護倉儲的同學，其他人根本不知道"協同"的意義在哪？&lt;br /&gt;
對他們而言，不過就是完成鍊條的英文字母罷了，所以我覺得這塊還有待加強，如果，你真的想知道這堂課的意義，你必須要：&lt;br /&gt;
1.在乎你的組員(不要只顧自己好，要分享)&lt;br /&gt;
2.了解你在組別裡的工作(大家要分工)&lt;br /&gt;
3.尊重其他組別(可以互相參考資訊，但不要"偷竊")&lt;br /&gt;
4.隨時注意整個環境的變動(記得改版更新)&lt;br /&gt;
5.在乎這個班級(不要忘了倉儲是"年級"共用的，但我就不先說隔壁班了...)&lt;br /&gt;&lt;/p&gt;</summary><category term="scrum2"></category><category term="task1"></category></entry><entry><title>user1-測試 content 目錄下的 md 檔案轉換</title><link href="http://2015fallhw.github.io/cdw2/post/user1-ce-shi-content-mu-lu-xia-de-md-dang-an-zhuan-huan.html" rel="alternate"></link><updated>2016-04-29T21:30:06+08:00</updated><author><name>kmol</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/user1-ce-shi-content-mu-lu-xia-de-md-dang-an-zhuan-huan.html</id><summary type="html">&lt;p&gt;網站類別分為 ag1~ag10, bg1~bg10, 與 MISC, 各組員必須透過 Leo Editor, Pelican,  與 Github pull requests 完成.&lt;/p&gt;


&lt;p&gt;CDW2 網頁: &lt;a href="http://2015fallhw.github.io/cdw2/"&gt;http://2015fallhw.github.io/cdw2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二甲文章類別: ag1~ag10&lt;/p&gt;
&lt;p&gt;二乙文章類別: bg1~bg10&lt;/p&gt;
&lt;p&gt;本網頁將 Pelican 設定分為本地端與 gh-pages 端的原因在於 disqus 設定, 本地端無需 disqus 討論功能, 而 gh-pages 端則需要網址全稱才能正確與 disqus 設定連結, 因此所有使用者在近端檢視時, 必須採用近端的按鈕, 而要送到遠端前則必須要用遠端按鈕產生所需要的 post 目錄下的所有資料後, 再提交推送.&lt;/p&gt;
&lt;p&gt;以下為圖片引用方法, 建議放到 files 目錄下, 並且用相對目錄引用各自放在以用戶名稱命名的子目錄中, 以避免多用戶因採相同檔名而覆寫:&lt;/p&gt;
&lt;pre class="brush: python;"&gt;
&lt;img src="./../files/user1/github.png" /&gt;
&lt;/pre&gt;

&lt;p&gt;得到結果如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../files/user1/github.png" /&gt;&lt;/p&gt;
&lt;p&gt;以下資料則從原先的 cdw2 gh-pages 分支中的 index.html 取出:&lt;/p&gt;
&lt;p&gt;cdw2 所在倉儲: &lt;a href="https://github.com/2015fallhw/cdw2"&gt;https://github.com/2015fallhw/cdw2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下繪圖由 s2a 的 g100 組所完成, 其中包括 s2b 的 g99 協同繪圖 (藍色零件). &lt;br /&gt;&lt;br /&gt;
&lt;a href="http://cdw2-ladisai.rhcloud.com/ag100/task2"&gt;http://cdw2-ladisai.rhcloud.com/ag100/task2&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;
以下則為4個零件中的第一個弧參數設定比較:
&lt;ol&gt;
&lt;li&gt;0(表示 x 軸轉角為0), 1(第一個選擇長度較大的弧), 0(且以右手向內畫弧)&lt;/li&gt;
&lt;li&gt;0(表示 x 軸轉角為0), 0(第一個選擇長度較小的弧), 0(且以右手向內畫弧)&lt;/li&gt;
&lt;li&gt;0(表示 x 軸轉角為0), 1(第一個選擇長度較大的弧), 1(且以右手向外畫弧)&lt;/li&gt;
&lt;li&gt;0(表示 x 軸轉角為0), 0(第一個選擇長度較小的弧), 1(且以右手向外畫弧)&lt;/li&gt;
&lt;/ol&gt;
&lt;a href="http://cdw2-ladisai.rhcloud.com/bg99/fourchain"&gt;http://cdw2-ladisai.rhcloud.com/bg99/fourchain&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
Task1 相關: &lt;a href="https://cmsimply-cadlab.rhcloud.com/get_page?heading=2016springCD"&gt;https://cmsimply-cadlab.rhcloud.com/get_page?heading=2016springCD&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
鍊條零件製造流程:
&lt;br /&gt;
&lt;br /&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/h8j5-dC6_x8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;br /&gt;
&lt;br /&gt;
組立流程:
&lt;br /&gt;
&lt;br /&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ZwTryvdmzD4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;如何協同編輯 CDW2 gh-pages 網頁:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先必須要認清的是 gh-pages 網頁位於 &lt;a href="https://github.com/2015fallhw/cdw2"&gt;https://github.com/2015fallhw/cdw2&lt;/a&gt; 倉儲中的 gh-pages 分支, 與 master 分支中的資料不可弄混.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CDW2 倉儲中的 master 分支中的資料為 Python3 wsgi 應用程式, 各組必須協同完成任務之後, 將 master 分支中的程式以 git remote add 的方式推送到各組的 OpenShift Python3 應用程式, 然後再將各組的應用程式連結與任務操作過程資料回報到 gh-pages 網頁.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gh-pages 分支中各組分別使用 users 目錄下的 .md 檔, 以本地端按鈕產生本地端檢查用的網頁資料, 若沒有錯誤, 再提交推送到遠端, 若倉儲回應需要 pull 回資料, 一定要使用 git pull origin gh-pages 的方式, 明確取回 gh-pages 的分支合併, 若 content 目錄中的檔案能夠自動合併, 即可再用近端 Pelican 按鈕建立網頁資料, 檢查無誤後, 記得要再用遠端 Pelican 專用按鈕建立網頁後提交推送.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外建議各組員在 content 目錄下建立文章標題時, 可以在標題最前方加上學號, 因為目前的設定會使用各 .md  檔案中的標題, 以拼音的方式建立對應的 html 網頁檔案, 假如有兩份 .md 檔案擁有相同的 Title, 則 Pelican 將會報錯, 一直到使用者修正後才能再正確進行 .md -&amp;gt; .html 檔案轉換的工作.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;採用 pull requests 尋求 gh-pages 合併時, 因為網頁中的許多檔案都將產生衝突, 因此通常無法直接在 Github 中直接合併, 各組組長必須要根據系統的提示, 將資料拉到本地端後, 再視實際狀況處理 .md 的衝突 (千萬不要以手動處理 .html 檔案的衝突), 然後再用本地端按鈕建立網頁, 檢視無誤後再用遠端按鈕建立網頁資料後, 執行提交推送流程, 假如各組組長在處理衝突過程, 已經有其他組對遠端的倉儲版本進行更版, 則前述拉回處理衝突與合併的動作, 就必須再重複一遍.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;祝大家協同愉快!!!&lt;/p&gt;</summary><category term="範例"></category><category term="task1"></category></entry><entry><title>40323255-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323255-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323255</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323255-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href=" http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1"&gt; http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1&lt;/a&gt;&lt;/p&gt;</summary><category term="scrum6"></category><category term="task1"></category></entry><entry><title>40323253-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323253-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323253</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323253-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;完成的 OpenShift 對應繪圖連結為:&lt;a href="http://cdw2-40323253.rhcloud.com/bg5/scrum5_task40323253_2"&gt;40323253畫布_繪製字母A&lt;/a&gt;&lt;/h2&gt;

&lt;h2&gt;master : &lt;/h2&gt;

&lt;h3&gt;master是用來存取畫布及鍊條的檔案，並且將繪製好的檔案上傳到OpenShift，讓畫布及鍊條能夠在遠端上顯示，若要在近端的localhost:5000顯示的話，要在cdw2目錄下，使用python wsgi.py指令，方能在近端顯示程式所繪製出來的鏈條。&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2&gt;個人畫布 : &lt;/h2&gt;

&lt;p&gt;&lt;img src="./../files/bg5/53_1.png"&gt;&lt;/p&gt;
&lt;h2&gt;OpenShift : &lt;/h2&gt;

&lt;p&gt;&lt;img src="./../files/bg5/53_2.png"&gt;&lt;/p&gt;
&lt;h2&gt;計算表 : &lt;/h2&gt;

&lt;p&gt;&lt;img src="./../files/bg5/53_4.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;gh-pages : &lt;/h2&gt;

&lt;h3&gt;gh-pages是拿來編輯期中報告之用，在user的組別目錄下，新增個人的leo檔案，然後將.md檔放在content，紅框為檔案名稱，若沒改寫的話，在編輯時會同時編輯到另外一人，所以必須將其改寫，完成編輯後記得button，在近端下測試按下local-peliacn，若要推送到gh-pages分支時，就選按gh-pages-pelican，推送後顯示於&lt;a href="http://2015fallhw.github.io/cdw2/post/"&gt;cdw2首頁&lt;/a&gt;
&lt;/br&gt;

&lt;h2&gt;編輯期中報告 : &lt;/h2&gt;
&lt;img src="./../files/bg5/53_3.png"&gt;

&lt;h2&gt;期中心得 : &lt;/h2&gt;
&lt;h3&gt;這學期我們開始協同課程，一上課老師就利用程式將我們分組，並利用GitHub的Fork來進行小組協同，各組員只需將做好的檔案Pull Request回去給組長審核即可。我們利用LEO編輯程式來畫圖，將圖檔以wsgi.py近端檢視，且上傳OpenShift將圖檔在遠端顯現出來，其中需要在OpenShift創建Pythone 3.3，利用鑰匙抓下來，再把圖檔貼上傳回遠端。在繪圖時必須先決定原點，再來要了解鍊條的尺寸，用三角函數計算其轉動角度，我認為最困難的並不是在繪製鍊條的部分，而是在協同觀念上，有種做完一步就卡關一步的感覺，總是有出不完的問題及衝突，希望這是我在未來能夠加以進步的地方。&lt;/h3&gt;</summary><category term="scrum5"></category><category term="task1"></category></entry><entry><title>40323251-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323251-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323251</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323251-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href=" http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1"&gt; http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1&lt;/a&gt;&lt;/p&gt;</summary><category term="scrum4"></category><category term="task1"></category></entry><entry><title>40323217-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323217-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323217</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323217-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href=" http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1"&gt; http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1&lt;/a&gt;&lt;/p&gt;</summary><category term="scrum3"></category><category term="task1"></category></entry><entry><title>40323206-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323206-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323206</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323206-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href="http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206"&gt;http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在班級倉儲cdw2的master建立.leo進行英文字母的繪製(會自動產生一個.py)，建立好後可以在cmd輸入python wsgi.py的指令，就可以在近端開啟http://localhost:5000/bg組別/scrum第幾組員_task學號，可以檢視程式碼畫出的英文字母。
&lt;br/&gt;
我是以圓點開始畫，在依照字母排列的位置進行位移。&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;&lt;span style="font-size: 16pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;字母繪製程式說明：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;定義座標軸線&lt;br/&gt;
cgo.drawAxes(0, 240, 0, 240)&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;軸線&amp;amp;數字顏色&lt;br/&gt;
 "strokeColor":"顏色代碼"&lt;br/&gt;
"fillColor": "顏色代碼"&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎可參閱色碼表
&lt;a href="https://www.toodoo.com/db/color.html"&gt;https://www.toodoo.com/db/color.html&lt;/a&gt;
&lt;br/&gt;
TickInterval為LabelInterval內再分割時間間距&lt;br/&gt;
LabelInterval為座標軸上每(多少)單位為一等分&lt;br/&gt;
"xTickInterval": 20&lt;br/&gt;
"xLabelInterval": 20&lt;br/&gt;
"yTickInterval": 20&lt;br/&gt;
"yLabelInterval": 20&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;旋轉必須要針對相對中心 rot not working yet&lt;br/&gt;
chamber = &lt;br/&gt;
"M -6.8397, -1.4894 \&lt;br/&gt;
A 7, 7, 0, 1, 0, 6.8397, -1.4894 \&lt;br/&gt;
A 40, 40, 0, 0, 1, 6.8397, -18.511 \&lt;br/&gt;
A 7, 7, 0, 1, 0, -6.8397, -18.511 \&lt;br/&gt;
A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"&lt;br/&gt;
A, (橢圓經中心X軸向長),  (橢圓經中心Y軸向長) , 0 , (大圓/小圓), (計算出的切點座標) , (計算出的切點座標)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎計算公式：&lt;br/&gt;
from sympy import&lt;br/&gt;
§center ot radius 40&lt;br/&gt;
x1 = Symbol('x1')&lt;br/&gt;
y1 = Symbol('y1')&lt;br/&gt;
§upper tangent point&lt;br/&gt;
x2 = Symbol('x2')&lt;br/&gt;
y2 = Symbol('y2')&lt;br/&gt;
§lower tangent point&lt;br/&gt;
x3 = Symbol('x3')&lt;br/&gt;
y3 = Symbol('y3')&lt;br/&gt;
answer = solve([(x2-0)&lt;strong&gt;2 + (y2-0)&lt;/strong&gt;2 - 7*7, (x1-x2)&lt;strong&gt;2+(y1-y2)&lt;/strong&gt;2 -40&lt;strong&gt;2, (x1-x3)&lt;/strong&gt;2+(y1-y3)&lt;strong&gt;2 -40&lt;/strong&gt;2, (x1)&lt;strong&gt;2+(y1)&lt;/strong&gt;2 -47&lt;strong&gt;2, \
       (x1)&lt;/strong&gt;2+(y1+20)&lt;strong&gt;2 -47&lt;/strong&gt;2, x2 -x3], [x1, y1, x2, y2, x3, y3])&lt;br/&gt;
group = 1&lt;br/&gt;
for i in answer:&lt;br/&gt;
    try:&lt;br/&gt;
        g.es("group", group, ":")&lt;br/&gt;
    except:&lt;br/&gt;
        print("group", group, ":")&lt;br/&gt;
    for j in i:&lt;br/&gt;
        try:&lt;br/&gt;
            g.es(j.evalf(5))&lt;br/&gt;
        except:&lt;br/&gt;
            print(j.evalf(5))&lt;br/&gt;
    group += 1&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;建立第一鍊條，會直接複製鍊條cmbr
    basic1 = cmbr.dup()
角度設定  &lt;br /&gt;
    basic1.rotate(90)   →逆時針90°
定位座標 &lt;br /&gt;
    basic1.translate(x, y)&lt;/p&gt;
&lt;p&gt;cmbr.appendPath(basic1)&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
◎如何位移
首先必須瞭解除了初始鍊條，其他鍊條都只是複製初始鍊條來的，所以所有鍊條一開始的設定都一樣。
如果旋轉指令rotate不為0，表示有旋轉，是以座標原點再進行旋轉！
換句話說，如果你的座標不是訂在原點，那轉動的位移會很大！
那先在圓心完成字母後要怎麼移動？
&lt;br/&gt;
1.如果我們要將字母X位移160，先將初始鍊條X位移160&lt;br/&gt;
  cmbr.translate(0, 0)→cmbr.translate(160, 0)
&lt;br/&gt;&lt;br /&gt;
2.這是第二鍊條原本的位置  &lt;br /&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) 
&lt;br/&gt;     &lt;br /&gt;
3.我們再定義完後先將鍊條移回原點再設定&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(-160, 0)&lt;/span&gt;&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg))&lt;br /&gt;
&lt;br/&gt;&lt;br /&gt;
4.最後再移到想要與初始鍊條對其的位置&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.translate(-160, 0)&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) &lt;br/&gt; 
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(160, 0)&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #660077;"&gt;以字母C作為範例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../files/bg5/C.JPG"&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;Openshift的對應建立&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
◎可參考課程網頁&lt;br /&gt;
 &lt;a href="http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html"&gt;http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html&lt;/a&gt;
&lt;br /&gt;
1.建立新的Application，並在Source Code輸入https://github.com/2015fallhw/cdw2.git &lt;br /&gt;
&lt;img src="./../files/bg5/連結.JPG"&gt;
&lt;br /&gt;
2.建立鑰匙&lt;br /&gt;
&lt;img src="./../files/bg5/KEY1.JPG"&gt;
&lt;br /&gt;
&lt;img src="./../files/bg5/KEY2.JPG"&gt;
&lt;br /&gt;
3.git clone 後修改除了.git以外的檔案&lt;br /&gt;
4.建議直接複製github的master，操作較簡易，但無用檔案較多&lt;br /&gt;
5.push完後點選openshift的連結(會出現猜數字)在網址後輸入你的畫布位置&amp;amp;名稱&lt;br /&gt;
EX: /bg5/scrum2_task40323206&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;期中心得&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
這次的任務做了半個學期，其實了解鍊條排列的程式後做起來就會很輕鬆很有成就感，但重點我認為並不是英文字母，而是班級同學之間的協同。&lt;br /&gt;
其實cmd裡面的指令不外乎就是：&lt;br /&gt;
1.git clone&lt;br /&gt;
2.git checkout master /gh-pages&lt;br /&gt;
3.git add -A&lt;br /&gt;
4.git commit -m ""&lt;br /&gt;
5.git push origin gh-pages&lt;br /&gt;
那還有甚麼困難？困難的地方就在第一步和最後一步，大家雖然是fork老師fork組長產生了cdw2的倉儲，表面上看起來好像是獨立的，可是並非如此！&lt;br /&gt;
因為大家不了解協同的意義和運作方式，所以協同者(組長)才會這麼累，所以班級倉儲才會故障！老實說我覺得除了那些有心去了解，和維護倉儲的同學，其他人根本不知道"協同"的意義在哪？&lt;br /&gt;
對他們而言，不過就是完成鍊條的英文字母罷了，所以我覺得這塊還有待加強，如果，你真的想知道這堂課的意義，你必須要：&lt;br /&gt;
1.在乎你的組員(不要只顧自己好，要分享)&lt;br /&gt;
2.了解你在組別裡的工作(大家要分工)&lt;br /&gt;
3.尊重其他組別(可以互相參考資訊，但不要"偷竊")&lt;br /&gt;
4.隨時注意整個環境的變動(記得改版更新)&lt;br /&gt;
5.在乎這個班級(不要忘了倉儲是"年級"共用的，但我就不先說隔壁班了...)&lt;br /&gt;&lt;/p&gt;</summary><category term="scrum2"></category><category term="task1"></category></entry><entry><title>40323206-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323206-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323206</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323206-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href="http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206"&gt;http://cdw2bg5-40323206.rhcloud.com/bg5/scrum2_task40323206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在班級倉儲cdw2的master建立.leo進行英文字母的繪製(會自動產生一個.py)，建立好後可以在cmd輸入python wsgi.py的指令，就可以在近端開啟http://localhost:5000/bg組別/scrum第幾組員_task學號，可以檢視程式碼畫出的英文字母。
&lt;br/&gt;
我是以圓點開始畫，在依照字母排列的位置進行位移。&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;&lt;span style="font-size: 16pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;字母繪製程式說明：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;定義座標軸線&lt;br/&gt;
cgo.drawAxes(0, 240, 0, 240)&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;軸線&amp;amp;數字顏色&lt;br/&gt;
 "strokeColor":"顏色代碼"&lt;br/&gt;
"fillColor": "顏色代碼"&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎可參閱色碼表
&lt;a href="https://www.toodoo.com/db/color.html"&gt;https://www.toodoo.com/db/color.html&lt;/a&gt;
&lt;br/&gt;
TickInterval為LabelInterval內再分割時間間距&lt;br/&gt;
LabelInterval為座標軸上每(多少)單位為一等分&lt;br/&gt;
"xTickInterval": 20&lt;br/&gt;
"xLabelInterval": 20&lt;br/&gt;
"yTickInterval": 20&lt;br/&gt;
"yLabelInterval": 20&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;旋轉必須要針對相對中心 rot not working yet&lt;br/&gt;
chamber = &lt;br/&gt;
"M -6.8397, -1.4894 \&lt;br/&gt;
A 7, 7, 0, 1, 0, 6.8397, -1.4894 \&lt;br/&gt;
A 40, 40, 0, 0, 1, 6.8397, -18.511 \&lt;br/&gt;
A 7, 7, 0, 1, 0, -6.8397, -18.511 \&lt;br/&gt;
A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"&lt;br/&gt;
A, (橢圓經中心X軸向長),  (橢圓經中心Y軸向長) , 0 , (大圓/小圓), (計算出的切點座標) , (計算出的切點座標)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;◎計算公式：&lt;br/&gt;
from sympy import&lt;br/&gt;
§center ot radius 40&lt;br/&gt;
x1 = Symbol('x1')&lt;br/&gt;
y1 = Symbol('y1')&lt;br/&gt;
§upper tangent point&lt;br/&gt;
x2 = Symbol('x2')&lt;br/&gt;
y2 = Symbol('y2')&lt;br/&gt;
§lower tangent point&lt;br/&gt;
x3 = Symbol('x3')&lt;br/&gt;
y3 = Symbol('y3')&lt;br/&gt;
answer = solve([(x2-0)&lt;strong&gt;2 + (y2-0)&lt;/strong&gt;2 - 7*7, (x1-x2)&lt;strong&gt;2+(y1-y2)&lt;/strong&gt;2 -40&lt;strong&gt;2, (x1-x3)&lt;/strong&gt;2+(y1-y3)&lt;strong&gt;2 -40&lt;/strong&gt;2, (x1)&lt;strong&gt;2+(y1)&lt;/strong&gt;2 -47&lt;strong&gt;2, \
       (x1)&lt;/strong&gt;2+(y1+20)&lt;strong&gt;2 -47&lt;/strong&gt;2, x2 -x3], [x1, y1, x2, y2, x3, y3])&lt;br/&gt;
group = 1&lt;br/&gt;
for i in answer:&lt;br/&gt;
    try:&lt;br/&gt;
        g.es("group", group, ":")&lt;br/&gt;
    except:&lt;br/&gt;
        print("group", group, ":")&lt;br/&gt;
    for j in i:&lt;br/&gt;
        try:&lt;br/&gt;
            g.es(j.evalf(5))&lt;br/&gt;
        except:&lt;br/&gt;
            print(j.evalf(5))&lt;br/&gt;
    group += 1&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;建立第一鍊條，會直接複製鍊條cmbr
    basic1 = cmbr.dup()
角度設定  &lt;br /&gt;
    basic1.rotate(90)   →逆時針90°
定位座標 &lt;br /&gt;
    basic1.translate(x, y)&lt;/p&gt;
&lt;p&gt;cmbr.appendPath(basic1)&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
◎如何位移
首先必須瞭解除了初始鍊條，其他鍊條都只是複製初始鍊條來的，所以所有鍊條一開始的設定都一樣。
如果旋轉指令rotate不為0，表示有旋轉，是以座標原點再進行旋轉！
換句話說，如果你的座標不是訂在原點，那轉動的位移會很大！
那先在圓心完成字母後要怎麼移動？
&lt;br/&gt;
1.如果我們要將字母X位移160，先將初始鍊條X位移160&lt;br/&gt;
  cmbr.translate(0, 0)→cmbr.translate(160, 0)
&lt;br/&gt;&lt;br /&gt;
2.這是第二鍊條原本的位置  &lt;br /&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) 
&lt;br/&gt;     &lt;br /&gt;
3.我們再定義完後先將鍊條移回原點再設定&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(-160, 0)&lt;/span&gt;&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg))&lt;br /&gt;
&lt;br/&gt;&lt;br /&gt;
4.最後再移到想要與初始鍊條對其的位置&lt;br/&gt;
    basic2 = cmbr.dup()&lt;br/&gt;
    basic2.translate(-160, 0)&lt;br/&gt;
    basic2.rotate(120)&lt;br/&gt;
    basic2.translate(20&lt;em&gt;math.cos(150&lt;/em&gt;deg), 20&lt;em&gt;math.sin(150&lt;/em&gt;deg)) &lt;br/&gt; 
&lt;span style="font-size: 10pt; font-family: 'arial black', 'avant garde';"&gt;&lt;span style="color: #FF0000;"&gt;basic2.translate(160, 0)&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #660077;"&gt;以字母C作為範例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../files/bg5/C.JPG"&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;Openshift的對應建立&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
◎可參考課程網頁&lt;br /&gt;
 &lt;a href="http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html"&gt;http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html&lt;/a&gt;
&lt;br /&gt;
1.建立新的Application，並在Source Code輸入https://github.com/2015fallhw/cdw2.git &lt;br /&gt;
&lt;img src="./../files/bg5/連結.JPG"&gt;
&lt;br /&gt;
2.建立鑰匙&lt;br /&gt;
&lt;img src="./../files/bg5/KEY1.JPG"&gt;
&lt;br /&gt;
&lt;img src="./../files/bg5/KEY2.JPG"&gt;
&lt;br /&gt;
3.git clone 後修改除了.git以外的檔案&lt;br /&gt;
4.建議直接複製github的master，操作較簡易，但無用檔案較多&lt;br /&gt;
5.push完後點選openshift的連結(會出現猜數字)在網址後輸入你的畫布位置&amp;amp;名稱&lt;br /&gt;
EX: /bg5/scrum2_task40323206&lt;/p&gt;
&lt;p&gt;&lt;hr/&gt;
&lt;span style="font-size: 14pt; font-family: 'arial black', 'avant garde';"&gt;&amp;nbsp;&lt;strong&gt;&lt;span style="color: #003366;"&gt;期中心得&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;br /&gt;
這次的任務做了半個學期，其實了解鍊條排列的程式後做起來就會很輕鬆很有成就感，但重點我認為並不是英文字母，而是班級同學之間的協同。&lt;br /&gt;
其實cmd裡面的指令不外乎就是：&lt;br /&gt;
1.git clone&lt;br /&gt;
2.git checkout master /gh-pages&lt;br /&gt;
3.git add -A&lt;br /&gt;
4.git commit -m ""&lt;br /&gt;
5.git push origin gh-pages&lt;br /&gt;
那還有甚麼困難？困難的地方就在第一步和最後一步，大家雖然是fork老師fork組長產生了cdw2的倉儲，表面上看起來好像是獨立的，可是並非如此！&lt;br /&gt;
因為大家不了解協同的意義和運作方式，所以協同者(組長)才會這麼累，所以班級倉儲才會故障！老實說我覺得除了那些有心去了解，和維護倉儲的同學，其他人根本不知道"協同"的意義在哪？&lt;br /&gt;
對他們而言，不過就是完成鍊條的英文字母罷了，所以我覺得這塊還有待加強，如果，你真的想知道這堂課的意義，你必須要：&lt;br /&gt;
1.在乎你的組員(不要只顧自己好，要分享)&lt;br /&gt;
2.了解你在組別裡的工作(大家要分工)&lt;br /&gt;
3.尊重其他組別(可以互相參考資訊，但不要"偷竊")&lt;br /&gt;
4.隨時注意整個環境的變動(記得改版更新)&lt;br /&gt;
5.在乎這個班級(不要忘了倉儲是"年級"共用的，但我就不先說隔壁班了...)&lt;br /&gt;&lt;/p&gt;</summary><category term="scrum2"></category><category term="task1"></category></entry><entry><title>40323204-期中報告</title><link href="http://2015fallhw.github.io/cdw2/post/40323204-qi-zhong-bao-gao.html" rel="alternate"></link><updated>2016-04-29T21:30:05+08:00</updated><author><name>40323204</name></author><id>tag:2015fallhw.github.io,2016-04-29:cdw2/post/40323204-qi-zhong-bao-gao.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;完成的 OpenShift 對應繪圖連結為: &lt;a href=" http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1"&gt; http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1&lt;/a&gt;&lt;/p&gt;</summary><category term="scrum1"></category><category term="task1"></category></entry></feed>